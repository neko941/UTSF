# """ https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC """

C: 1.0
# description: Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive. The penalty is a squared l2 penalty.
# default: 1.0
# options:

kernel: 'rbf' 
# description: specifies the kernel type to be used in the algorithm
# default: 'rbf'
# options: 'linear', 'rbf', 'sigmoid', 'precomputed'

degree: 3
# description: Degree of the polynomial kernel function (‘poly’). Must be non-negative. Ignored by all other kernels. 
# default: 3
# options:

gamma: 'scale'
# description: Kernel coefficient for ‘rbf’, ‘poly’ and ‘sigmoid’.
# default: 'scale'
# options: 'scale', 'auto', float: range [0, inf]

coef0: 0.0
# description: Independent term in kernel function. It is only significant in ‘poly’ and ‘sigmoid’.
# default: 0.0
# options:

shrinking: True
# description: Whether to use the shrinking heuristic.
# default: True
# options: True, False

probability: False
# description: Whether to enable probability estimates. This must be enabled prior to calling fit, will slow down that method as it internally uses 5-fold cross-validation, and predict_proba may be inconsistent with predict.
# default: False
# options: True, False

tol: 0.001
# description: Tolerance for stopping criterion.
# default: 1e-3
# options:

cache_size: 200
# description: Specify the size of the kernel cache (in MB). 
# default: 200
# options: 

class_weight:
# description:Set the parameter C of class i to class_weight[i]*C for SVC. If not given, all classes are supposed to have weight one. The “balanced” mode uses the values of y to automatically adjust weights inversely proportional to class frequencies in the input data as n_samples / (n_classes * np.bincount(y))
# default: None
# options: 'balanced', None, a dict

verbose: True
# description: Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in libsvm that, if enabled, may not work properly in a multithreaded context.
# default: False
# options: True, False

max_iter: -1
# description: Hard limit on iterations within solver, or -1 for no limit. 
# default: -1
# options:

decision_function_shape: 'ovr'
# description: Whether to return a one-vs-rest (‘ovr’) decision function of shape (n_samples, n_classes) as all other classifiers, or the original one-vs-one (‘ovo’) decision function of libsvm which has shape (n_samples, n_classes * (n_classes - 1) / 2).
# default: 'ovr'
# options: 'ovr', 'ovo'

break_ties: False
# description: If true, decision_function_shape='ovr', and number of classes > 2, predict will break ties according to the confidence values of decision_function; otherwise the first class among the tied classes is returned. Please note that breaking ties comes at a relatively high computational cost compared to a simple predict.
# default: False
# options: True, False

random_state: 
# description: Controls the pseudo random number generation for shuffling the data for probability estimates. Ignored when probability is False. Pass an int for reproducible output across multiple function calls.  
# default: None
# options: int, RandomState instance, None